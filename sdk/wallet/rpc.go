package wallet

import (
	"chia-go-cli/sdk/client"
	"reflect"
)

var RpcApis = []*client.TemplateRpcMethod{
	{
		MethodName:   "GetWalletBalance",
		Desc:         "Get the wallet balance",
		Method:       "POST",
		Url:          "get_wallet_balance",
		JsonTemplate: `{"wallet_id": 1}`,
		ValInfo: []*client.TemplateValue{
			{
				Name:    "wallet-id",
				Desc:    "Wallet Id",
				Type:    reflect.Int,
				Default: 1,
				Path:    "wallet_id",
			},
		},
	},
	//{
	//	MethodName:   "LogIn",
	//	Desc:         "Sets a key to active.",
	//	Method:       "POST",
	//	Url:          "log_in",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetPublicKeys",
	//	Desc:         "Get all root public keys accessible by the wallet.",
	//	Method:       "POST",
	//	Url:          "get_public_keys",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetPrivateKey",
	//	Desc:         "Get all root private keys accessible by the wallet.",
	//	Method:       "POST",
	//	Url:          "get_private_key",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GenerateMnemonic",
	//	Desc:         "Generate a 24 word mnemonic phrase, used to derive a private key.",
	//	Method:       "POST",
	//	Url:          "generate_mnemonic",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "AddKey",
	//	Desc:         "Add a private key to the keychain",
	//	Method:       "POST",
	//	Url:          "add_key",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "DeleteKey",
	//	Desc:         "Delete a private key from the keychain",
	//	Method:       "POST",
	//	Url:          "delete_key",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "DeleteAllKeys",
	//	Desc:         "Delete all private keys from the keychain",
	//	Method:       "POST",
	//	Url:          "delete_all_keys",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetSyncStatus",
	//	Desc:         "Gets the sync status of the wallet.",
	//	Method:       "POST",
	//	Url:          "get_sync_status",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetHeightInfo",
	//	Desc:         "Gets information about the current height of the wallet.",
	//	Method:       "POST",
	//	Url:          "get_height_info",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "FarmBlock",
	//	Desc:         "Farms a block, only available with the simulator.",
	//	Method:       "POST",
	//	Url:          "farm_block",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetInitialFreezePeriod",
	//	Desc:         "Retrieves the initial freeze period for the blockchain (no transactions allowed).",
	//	Method:       "POST",
	//	Url:          "get_initial_freeze_period",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetNetworkInfo",
	//	Desc:         "Retrieves some information about the current network.",
	//	Method:       "POST",
	//	Url:          "get_network_info",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetWallets",
	//	Desc:         "Gets a list of wallets for this key.",
	//	Method:       "POST",
	//	Url:          "get_wallets",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "CreateNewWallet",
	//	Desc:         "Creates a new wallet for this key.",
	//	Method:       "POST",
	//	Url:          "create_new_wallet",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetTransaction",
	//	Desc:         "Gets a transaction record by transaction id",
	//	Method:       "POST",
	//	Url:          "get_transaction",
	//	JsonTemplate: `{}`,
	//},
	{
		MethodName:   "GetTransactions",
		Desc:         "Gets transaction records",
		Method:       "POST",
		Url:          "get_transactions",
		JsonTemplate: `{"wallet_id": 1, "offset": 0}`,
		ValInfo: []*client.TemplateValue{
			{
				Name:    "wallet-id",
				Desc:    "Wallet Id",
				Type:    reflect.Int,
				Default: 1,
				Path:    "wallet_id",
			},
			{
				Name:    "offset",
				Desc:    "Offset",
				Type:    reflect.Int,
				Default: 1,
				Path:    "offset",
			},
		},
	},
	//{
	//	MethodName:   "GetNextAddress",
	//	Desc:         "Gets a new (or not new) address",
	//	Method:       "POST",
	//	Url:          "get_next_address",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "SendTransaction",
	//	Desc:         "Sends a standard transaction to a target puzzle_hash.",
	//	Method:       "POST",
	//	Url:          "send_transaction",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "CreateBackup",
	//	Desc:         "Creates a backup for this wallet.",
	//	Method:       "POST",
	//	Url:          "create_backup",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetTransactionCount",
	//	Desc:         "Gets the number of transactions in this wallet.",
	//	Method:       "POST",
	//	Url:          "get_transaction_count",
	//	JsonTemplate: `{}`,
	//},
	//{
	//	MethodName:   "GetFarmedAmount",
	//	Desc:         "Gets information about farming rewards for this wallet.",
	//	Method:       "POST",
	//	Url:          "get_farmed_amount",
	//	JsonTemplate: `{}`,
	//},
}
